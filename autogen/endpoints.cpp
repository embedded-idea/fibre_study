/*
 * ============================ WARNING ============================
 * ==== This is an autogenerated file.                          ====
 * ==== Any changes to this file will be lost when recompiling. ====
 * =================================================================
 *
 * This file contains the toplevel handler for Fibre v0.1 endpoint operations.
 *
 * This endpoint-oriented approach will be deprecated in Fibre v0.2 in favor of
 * a function-oriented approach and a more powerful object model.
 *
 */

#include <fibre/../../legacy_protocol.hpp>
#include <fibre/../../protocol.hpp>
#include <fibre/../../crc.hpp>

namespace fibre {

const unsigned char embedded_json[] = "["
"{\"name\":\"\",\"id\":0,\"type\":\"json\",\"access\":\"r\"},"
"{\"name\":\"func00\",\"id\":1,\"type\":\"function\",\"inputs\":[],\"outputs\":[]},"
"{\"name\":\"func01\",\"id\":2,\"type\":\"function\",\"inputs\":[],\"outputs\":["
"{\"name\":\"out1\",\"id\":3,\"type\":\"uint32\",\"access\":\"r\"}]},"
"{\"name\":\"func02\",\"id\":4,\"type\":\"function\",\"inputs\":[],\"outputs\":["
"{\"name\":\"out1\",\"id\":5,\"type\":\"uint32\",\"access\":\"r\"},"
"{\"name\":\"out2\",\"id\":6,\"type\":\"uint32\",\"access\":\"r\"}]},"
"{\"name\":\"func10\",\"id\":7,\"type\":\"function\",\"inputs\":["
"{\"name\":\"in1\",\"id\":8,\"type\":\"uint32\",\"access\":\"rw\"}],\"outputs\":[]},"
"{\"name\":\"func11\",\"id\":9,\"type\":\"function\",\"inputs\":["
"{\"name\":\"in1\",\"id\":10,\"type\":\"uint32\",\"access\":\"rw\"}],\"outputs\":["
"{\"name\":\"out1\",\"id\":11,\"type\":\"uint32\",\"access\":\"r\"}]},"
"{\"name\":\"func12\",\"id\":12,\"type\":\"function\",\"inputs\":["
"{\"name\":\"in1\",\"id\":13,\"type\":\"uint32\",\"access\":\"rw\"}],\"outputs\":["
"{\"name\":\"out1\",\"id\":14,\"type\":\"uint32\",\"access\":\"r\"},"
"{\"name\":\"out2\",\"id\":15,\"type\":\"uint32\",\"access\":\"r\"}]},"
"{\"name\":\"func20\",\"id\":16,\"type\":\"function\",\"inputs\":["
"{\"name\":\"in1\",\"id\":17,\"type\":\"uint32\",\"access\":\"rw\"},"
"{\"name\":\"in2\",\"id\":18,\"type\":\"uint32\",\"access\":\"rw\"}],\"outputs\":[]},"
"{\"name\":\"func21\",\"id\":19,\"type\":\"function\",\"inputs\":["
"{\"name\":\"in1\",\"id\":20,\"type\":\"uint32\",\"access\":\"rw\"},"
"{\"name\":\"in2\",\"id\":21,\"type\":\"uint32\",\"access\":\"rw\"}],\"outputs\":["
"{\"name\":\"out1\",\"id\":22,\"type\":\"uint32\",\"access\":\"r\"}]},"
"{\"name\":\"func22\",\"id\":23,\"type\":\"function\",\"inputs\":["
"{\"name\":\"in1\",\"id\":24,\"type\":\"uint32\",\"access\":\"rw\"},"
"{\"name\":\"in2\",\"id\":25,\"type\":\"uint32\",\"access\":\"rw\"}],\"outputs\":["
"{\"name\":\"out1\",\"id\":26,\"type\":\"uint32\",\"access\":\"r\"},"
"{\"name\":\"out2\",\"id\":27,\"type\":\"uint32\",\"access\":\"r\"}]},"
"{\"name\":\"prop_uint32\",\"id\":28,\"type\":\"uint32\",\"access\":\"r\"},"
"{\"name\":\"prop_uint32_rw\",\"id\":29,\"type\":\"uint32\",\"access\":\"rw\"},"
"{\"name\":\"subobj\",\"type\":\"object\",\"members\":["
"{\"name\":\"subfunc\",\"id\":30,\"type\":\"function\",\"inputs\":[],\"outputs\":["
"{\"name\":\"out1\",\"id\":31,\"type\":\"uint32\",\"access\":\"r\"}]}]}]";
const size_t embedded_json_length = sizeof(embedded_json) - 1;

EndpointDefinition endpoint_table[] = {
    {},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 4, .object_id = 0}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 5, .object_id = 0}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 6, .object_id = 0}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 7, .object_id = 0}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 8, .object_id = 0}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 9, .object_id = 0}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 10, .object_id = 0}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 11, .object_id = 0}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 12, .object_id = 0}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionInput, .function_input = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
    {.type = EndpointType::kRoProperty, .ro_property = {.read_function_id = 0, .object_id = 1}},
    {.type = EndpointType::kRwProperty, .rw_property = {.read_function_id = 2, .exchange_function_id = 1, .object_id = 2}},
    {.type = EndpointType::kFunctionTrigger, .function_trigger = {.function_id = 3, .object_id = 3}},
    {.type = EndpointType::kFunctionOutput, .function_output = {.size = 4}},
};

const uint16_t json_crc_ = calc_crc16<CANONICAL_CRC16_POLYNOMIAL>(PROTOCOL_VERSION, embedded_json, embedded_json_length);
const uint32_t json_version_id_ = (json_crc_ << 16) | calc_crc16<CANONICAL_CRC16_POLYNOMIAL>(json_crc_, embedded_json, embedded_json_length);
const size_t n_endpoints = sizeof(endpoint_table) / sizeof(endpoint_table[0]);

}